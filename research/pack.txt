pack format

note: everything is aligned to 4 bytes.
note: rel_offset is from the start of that field.

header:
    magic (4) note: PACK
    version (4)
    total_size (4)
    serialized_size (4) note: this is the size of the PACK data, seeking to this number will be where resource data starts.
    resource_size (4) note: this is data that exists inherently in the pack, always after all the files.
    preload_count (4)
    rel_offset_preload_table (4) -> preload[]
    pack_count (4)
    rel_offset_header_table (4) -> file[]
    file_count (4)
    rel_offset_file_table (4) -> file[]

preload:
    id (4)
    rel_offset_name (4) -> null terminated string
    unknown (4)

file: note: these are all bxon files, actual resource data is at the end of the file (seek to serialized_size)
    id (4)
    rel_offset_name (4) -> null terminated string
    size (4)
    rel_offset_data (4) -> buffer
    rel_offset_str (4) -> byte length prefixed string?
